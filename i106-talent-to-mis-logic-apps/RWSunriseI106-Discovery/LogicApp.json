{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Logic App."
      },
      "defaultValue": ""
    },
    "SupportEmailAddress": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Email address that will receive error alert"
      },
      "defaultValue": ""
    },
    "BYODTableTopSelectValue": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "All database table select top count"
      },
      "defaultValue": ""
    },
    "TotalItemBatch": {
      "type": "int",
      "metadata": {
        "description": "The total value that will be batch per message that is sent to event grid"
      },
      "defaultValue": 0
    },
    "EventGridUrl": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Event Grid Url"
      },
      "defaultValue": ""
    },
    "EventGridKey": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Event Grid access key"
      },
      "defaultValue": ""
    },
    "EventGridTopicReference": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Event Grid webhook refrence uri"
      },
      "defaultValue": ""
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "koreacentral",
        "koreasouth",
        "francecentral",
        "francesouth",
        "southafricanorth",
        "southafricawest"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    },
    "office365_1_Connection_Name": {
      "type": "string",
      "defaultValue": "office365"
    },
    "office365_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "ERPservicealerts@robertwalters.com"
    },
    "TalentWorkerBuilderConnectorPROD_1_Connection_Name": {
      "type": "string",
      "defaultValue": "TalentWorkerBuilderConnectorPROD"
    },
    "TalentWorkerBuilderConnectorPROD_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "RWSunriseTalentWorkerBuilder-PROD"
    },
    "TalentWorkerBuilderConnectorPROD_1_api_key": {
      "type": "securestring",
      "metadata": {
        "description": "The API Key for this api"
      }
    },
    "TalentWorkerErrorHandlingConnectorPROD_1_Connection_Name": {
      "type": "string",
      "defaultValue": "TalentWorkerErrorHandlingConnectorPROD"
    },
    "TalentWorkerErrorHandlingConnectorPROD_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "TalentWorkerErrorHanlingAPI"
    },
    "TalentWorkerErrorHandlingConnectorPROD_1_api_key": {
      "type": "securestring",
      "metadata": {
        "description": "The API Key for this api"
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "name": "[parameters('logicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('logicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "apiVersion": "2016-06-01",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "var_ProcessingPlaceholder": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Processing Placeholder",
                    "type": "Array"
                  }
                ]
              },
              "runAfter": {}
            },
            "var_Counter": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Counter",
                    "type": "Integer",
                    "value": 0
                  }
                ]
              },
              "runAfter": {
                "var_TakeProcessingPlaceholder": [
                  "Succeeded"
                ]
              }
            },
            "var_BatchItemNo": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Batch Item No",
                    "type": "Integer",
                    "value": "@parameters('totalItemBatch')"
                  }
                ]
              },
              "runAfter": {
                "var_Counter": [
                  "Succeeded"
                ]
              }
            },
            "var_TakeProcessingPlaceholder": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Take Processing Placeholder",
                    "type": "Array"
                  }
                ]
              },
              "runAfter": {
                "var_SkipProcessingPlaceholder": [
                  "Succeeded"
                ]
              }
            },
            "var_SkipProcessingPlaceholder": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Skip Processing Placeholder",
                    "type": "Array"
                  }
                ]
              },
              "runAfter": {
                "var_ProcessingPlaceholder": [
                  "Succeeded"
                ]
              }
            },
            "Discovery_Scope": {
              "type": "Scope",
              "actions": {
                "Are_there_unprocessed_records": {
                  "type": "If",
                  "expression": {
                    "and": [
                      {
                        "greater": [
                          "@length(json(body('Talent_Worker_Builder_API')))",
                          0
                        ]
                      }
                    ]
                  },
                  "actions": {
                    "TalentWorkerErrorHandlingConnectorPROD": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['TalentWorkerErrorHandlingConnectorPROD']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": {
                          "apioutput": "@{json(body('Talent_Worker_Builder_API'))}"
                        },
                        "path": "/api/ValidateWorkers"
                      },
                      "runAfter": {}
                    },
                    "Check_for_valid_data": {
                      "type": "If",
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@body('TalentWorkerErrorHandlingConnectorPROD')",
                              "valid data"
                            ]
                          }
                        ]
                      },
                      "actions": {
                        "Until": {
                          "type": "Until",
                          "expression": "@equals(variables('Counter'), length(json(body('Talent_Worker_Builder_API'))[1]))",
                          "limit": {
                            "count": 60,
                            "timeout": "PT1H"
                          },
                          "actions": {
                            "Does_the_array_placeholder_has_any_items_yet": {
                              "type": "If",
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@length(variables('Processing Placeholder'))",
                                      0
                                    ]
                                  }
                                ]
                              },
                              "actions": {
                                "Set_Skip_Processing_by_current_counter": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "Skip Processing Placeholder",
                                    "value": "@skip(json(body('Talent_Worker_Builder_API'))[1], variables('Counter'))"
                                  },
                                  "runAfter": {}
                                },
                                "Set_Take_Processing_by_taking_skip": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "Take Processing Placeholder",
                                    "value": "@take(variables('Skip Processing Placeholder'), variables('Batch Item No'))"
                                  },
                                  "runAfter": {
                                    "Set_Skip_Processing_by_current_counter": [
                                      "Succeeded"
                                    ]
                                  }
                                },
                                "Post_to_EG_RWSunriseDevTopic_2": {
                                  "type": "Http",
                                  "inputs": {
                                    "method": "POST",
                                    "uri": "@{parameters('eventGridUrl')}",
                                    "headers": {
                                      "aeg-sas-key": "@{parameters('eventGridKey')}",
                                      "content-type": "application/json"
                                    },
                                    "body": [
                                      {
                                        "data": "@variables('Take Processing Placeholder')",
                                        "dataVersion": "1.0",
                                        "eventTime": "@utcNow()",
                                        "eventType": "recordInserted",
                                        "id": "@rand(1000, 10000)",
                                        "metadataVersion": "1",
                                        "subject": "byod/talent/@{json(body('Talent_Worker_Builder_API'))[0]}",
                                        "topic": "@parameters('eventGridTopicReference')"
                                      }
                                    ]
                                  },
                                  "runAfter": {
                                    "Set_Take_Processing_by_taking_skip": [
                                      "Succeeded"
                                    ]
                                  }
                                },
                                "Loop_through_Take_Processing_Placeholder": {
                                  "type": "Foreach",
                                  "foreach": "@variables('Take Processing Placeholder')",
                                  "actions": {
                                    "Append_to_array_variable": {
                                      "type": "AppendToArrayVariable",
                                      "inputs": {
                                        "name": "Processing Placeholder",
                                        "value": "@items('Loop_through_Take_Processing_Placeholder')"
                                      },
                                      "runAfter": {}
                                    }
                                  },
                                  "runAfter": {
                                    "Post_to_EG_RWSunriseDevTopic_2": [
                                      "Succeeded"
                                    ]
                                  },
                                  "description": "After skipping, taking  and sending event to event grid we now add to Processing Placeholder array variable here so we can keep record and count until all items from the original array has been taken..."
                                },
                                "Set_Counter": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "Counter",
                                    "value": "@length(variables('Processing Placeholder'))"
                                  },
                                  "runAfter": {
                                    "Loop_through_Take_Processing_Placeholder": [
                                      "Succeeded"
                                    ]
                                  }
                                }
                              },
                              "runAfter": {},
                              "else": {
                                "actions": {
                                  "Set_Processing_Placeholder": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "Processing Placeholder",
                                      "value": "@take(json(body('Talent_Worker_Builder_API'))[1], variables('Batch Item No'))"
                                    },
                                    "runAfter": {},
                                    "description": "Since this is the begining we can just take without skip, from the body array of custom API"
                                  },
                                  "Post_to_EG_RWSunriseDevTopic_1": {
                                    "type": "Http",
                                    "inputs": {
                                      "method": "POST",
                                      "uri": "@{parameters('eventGridUrl')}",
                                      "headers": {
                                        "aeg-sas-key": "@{parameters('eventGridKey')}",
                                        "content-type": "application/json"
                                      },
                                      "body": [
                                        {
                                          "data": "@variables('Processing Placeholder')",
                                          "dataVersion": "1.0",
                                          "eventTime": "@utcNow()",
                                          "eventType": "recordInserted",
                                          "id": "@rand(1000, 10000)",
                                          "metadataVersion": "1",
                                          "subject": "byod/talent/@{json(body('Talent_Worker_Builder_API'))[0]}",
                                          "topic": "@parameters('eventGridTopicReference')"
                                        }
                                      ]
                                    },
                                    "runAfter": {
                                      "Set_Processing_Placeholder": [
                                        "Succeeded"
                                      ]
                                    }
                                  },
                                  "Set_Counter_length": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "Counter",
                                      "value": "@length(variables('Processing Placeholder'))"
                                    },
                                    "runAfter": {
                                      "Post_to_EG_RWSunriseDevTopic_1": [
                                        "Succeeded"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "runAfter": {}
                        }
                      },
                      "runAfter": {
                        "TalentWorkerErrorHandlingConnectorPROD": [
                          "Succeeded"
                        ]
                      }
                    }
                  },
                  "runAfter": {
                    "Talent_Worker_Builder_API": [
                      "Succeeded"
                    ]
                  }
                },
                "Talent_Worker_Builder_API": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['TalentWorkerBuilderConnectorPROD']['connectionId']"
                      }
                    },
                    "method": "post",
                    "body": {
                      "topcount": "@{parameters('byodTableTopSelectValue')}"
                    },
                    "path": "/api/WorkerBuilder"
                  },
                  "runAfter": {}
                }
              },
              "runAfter": {
                "var_BatchItemNo": [
                  "Succeeded"
                ]
              }
            },
            "Confirm_status_of_Discovery_Scope": {
              "type": "If",
              "expression": {
                "and": [
                  {
                    "not": {
                      "equals": [
                        "@result('Discovery_Scope')[0]['status']",
                        "Succeeded"
                      ]
                    }
                  }
                ]
              },
              "actions": {
                "Error_handling_email": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['office365_1']['connectionId']"
                      }
                    },
                    "method": "post",
                    "body": {
                      "To": "@{parameters('supportEmailAddress')}",
                      "Subject": "Error occurred on @{parameters('logicAppName')} workflow running in Azure",
                      "Body": "Hello Support\n\nAn error occurred during the discovery of talent data from BYOD. This workflow has a custom API that is called to load data from BYOD. If the data is received successfully it is then push through to event grid. Problem could have occured at custom API level or there is issue accessing the event grid.\nPlease investigate this issue in Azure. The workflow project is called @{parameters('logicAppName')} acts as the entry point for the talent to MIS integraion.\n\nOnce this problem has been resolved the record will be re-discovered and should be processed successfully.\n\nThank you"
                    },
                    "path": "/Mail"
                  },
                  "runAfter": {}
                }
              },
              "runAfter": {
                "Discovery_Scope": [
                  "Succeeded",
                  "Failed",
                  "Skipped",
                  "TimedOut"
                ]
              }
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "logicAppName": {
              "type": "String",
              "defaultValue": "[parameters('logicAppName')]"
            },
            "supportEmailAddress": {
              "type": "String",
              "defaultValue": "[parameters('SupportEmailAddress')]"
            },
            "byodTableTopSelectValue": {
              "type": "String",
              "defaultValue": "[parameters('BYODTableTopSelectValue')]"
            },
            "totalItemBatch": {
              "type": "Int",
              "defaultValue": "[parameters('TotalItemBatch')]"
            },
            "eventGridUrl": {
              "type": "String",
              "defaultValue": "[parameters('EventGridUrl')]"
            },
            "eventGridKey": {
              "type": "String",
              "defaultValue": "[parameters('EventGridKey')]"
            },
            "eventGridTopicReference": {
              "type": "String",
              "defaultValue": "[parameters('EventGridTopicReference')]"
            }
          },
          "triggers": {
            "Recurrence": {
              "type": "Recurrence",
              "recurrence": {
                "frequency": "Minute",
                "interval": 15
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "TalentWorkerBuilderConnectorPROD": {
                "id": "[resourceId('Microsoft.Web/customApis', 'TalentWorkerBuilderConnectorPROD')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('TalentWorkerBuilderConnectorPROD_1_Connection_Name'))]",
                "connectionName": "[parameters('TalentWorkerBuilderConnectorPROD_1_Connection_Name')]"
              },
              "office365_1": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'office365')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('office365_1_Connection_Name'))]",
                "connectionName": "[parameters('office365_1_Connection_Name')]"
              },
              "TalentWorkerErrorHandlingConnectorPROD": {
                "id": "[resourceId('Microsoft.Web/customApis', 'TalentWorkerErrorHandlingConnectorPROD')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('TalentWorkerErrorHandlingConnectorPROD_1_Connection_Name'))]",
                "connectionName": "[parameters('TalentWorkerErrorHandlingConnectorPROD_1_Connection_Name')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('TalentWorkerBuilderConnectorPROD_1_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('office365_1_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('TalentWorkerErrorHandlingConnectorPROD_1_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2016-06-01",
      "name": "[parameters('office365_1_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'office365')]"
        },
        "displayName": "[parameters('office365_1_Connection_DisplayName')]"
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2016-06-01",
      "name": "[parameters('TalentWorkerBuilderConnectorPROD_1_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[resourceId('RW-RG-NE-LogicApps', 'Microsoft.Web/customApis', 'TalentWorkerBuilderConnectorPROD')]"
        },
        "displayName": "[parameters('TalentWorkerBuilderConnectorPROD_1_Connection_DisplayName')]",
        "parameterValues": {
          "api_key": "[parameters('TalentWorkerBuilderConnectorPROD_1_api_key')]"
        }
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('TalentWorkerErrorHandlingConnectorPROD_1_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[resourceId('Microsoft.Web/customApis', 'TalentWorkerErrorHandlingConnectorPROD')]"
        },
        "displayName": "[parameters('TalentWorkerErrorHandlingConnectorPROD_1_Connection_DisplayName')]",
        "parameterValues": {
          "api_key": "[parameters('TalentWorkerErrorHandlingConnectorPROD_1_api_key')]"
        }
      }
    }
  ],
  "outputs": {}
}