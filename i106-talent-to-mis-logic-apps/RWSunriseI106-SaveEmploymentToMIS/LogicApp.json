{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Logic App."
      },
      "defaultValue": ""
    },
    "SqlServerName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Name of SQL Server host"
      },
      "defaultValue": ""
    },
    "SqlDatabaseName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Name of Database"
      },
      "defaultValue": ""
    },
    "SupportEmailAddress": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Email address for error handling"
      },
      "defaultValue": ""
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "koreacentral",
        "koreasouth",
        "francecentral",
        "francesouth"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    },
    "oracle_1_Connection_Name": {
      "type": "string",
      "defaultValue": "oracle"
    },
    "oracle_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "Oracle Talent PROD Staging"
    },
    "oracle_1_server": {
      "type": "string",
      "metadata": {
        "description": "Specify the Oracle Server. If a port or SID is required, specify in the form of ServerName:Port/SID."
      },
      "defaultValue": "ZUK1.WORLD"
    },
    "oracle_1_authType": {
      "type": "string",
      "metadata": {
        "description": "Authentication type to connect to your database"
      },
      "defaultValue": "basic",
      "allowedValues": [
        "basic"
      ]
    },
    "oracle_1_username": {
      "type": "securestring",
      "metadata": {
        "description": "Username credential"
      }
    },
    "oracle_1_password": {
      "type": "securestring",
      "metadata": {
        "description": "Password credential"
      }
    },
    "oracle_1_gateway_id": {
      "type": "string",
      "defaultValue": "/subscriptions/51132d16-72f5-491f-90db-30b922b816e6/resourceGroups/RW-RG-NE-DataGateway/providers/Microsoft.Web/connectionGateways/DataGWProd-ANE"
    },
    "sql_1_Connection_Name": {
      "type": "string",
      "defaultValue": "sql"
    },
    "sql_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "Talent BYOD PROD"
    },
    "sql_1_server": {
      "type": "string",
      "metadata": {
        "description": "SQL server name"
      },
      "defaultValue": "byodb-prod.database.windows.net"
    },
    "sql_1_database": {
      "type": "string",
      "metadata": {
        "description": "SQL database name"
      },
      "defaultValue": "TALENT-BYODB-PROD"
    },
    "sql_1_username": {
      "type": "securestring",
      "metadata": {
        "description": "Username credential"
      }
    },
    "sql_1_password": {
      "type": "securestring",
      "metadata": {
        "description": "Password credential"
      }
    },
    "sql_1_sqlConnectionString": {
      "type": "securestring",
      "metadata": {
        "description": "SQL Connection String"
      }
    },
    "office365_1_Connection_Name": {
      "type": "string",
      "defaultValue": "office365"
    },
    "office365_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "ERPservicealerts@robertwalters.com"
    }
  },
  "variables": {},
  "resources": [
    {
      "name": "[parameters('logicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('logicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "apiVersion": "2016-06-01",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Oracle_BYOD_Scope": {
              "type": "Scope",
              "actions": {
                "Switch": {
                  "type": "Switch",
                  "expression": "@triggerBody()['querySubject']",
                  "cases": {
                    "Employment_detail_Case": {
                      "case": "byod/talent/EmploymentDetails",
                      "actions": {
                        "For_each_employment": {
                          "type": "Foreach",
                          "foreach": "@triggerBody()['items']",
                          "actions": {
                            "Get_worker_position_emp": {
                              "type": "ApiConnection",
                              "inputs": {
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['oracle']['connectionId']"
                                  }
                                },
                                "method": "get",
                                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[TALENT].[TALENT_STAFF]'))}/items",
                                "queries": {
                                  "$filter": "POSITION_ID eq '@{items('For_each_employment')?['PositionId']}'",
                                  "$select": "EMAILADDRESS"
                                }
                              },
                              "runAfter": {}
                            },
                            "Check_worker_position_exist_empDetail": {
                              "type": "If",
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@length(body('Get_worker_Position_emp')?['value'])",
                                      1
                                    ]
                                  }
                                ]
                              },
                              "actions": {
                                "Update_Employment_detail": {
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['oracle']['connectionId']"
                                      }
                                    },
                                    "method": "patch",
                                    "body": {
                                      "TALENT_ID": "@{items('For_each_employment')?['WorkerNumber']}",
                                      "POSITION_ID": "@{items('For_each_employment')?['PositionId']}",
                                      "DATELEFT": "@{formatDateTime(items('For_each_employment')?['LastDateWorked'], 'yyyy-MM-dd')}",
                                      "TERMINATIONDATE": "@{formatDateTime(items('For_each_employment')?['TransitionDate'], 'yyyy-MM-dd')}"
                                    },
                                    "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[TALENT].[TALENT_STAFF]'))}/items/@{encodeURIComponent(encodeURIComponent(items('For_each_employment')?['PositionId']))}"
                                  },
                                  "runAfter": {}
                                },
                                "Execute_Employment_detail_stored_procedure": {
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "body": {
                                      "EMPLOYMENTENDDATE": "@{formatDateTime(items('For_each_employment')?['EmploymentEndDate'], 'yyyy-MM-ddTHH:mm:ssZ')}",
                                      "EMPLOYMENTSTARTDATE": "@{formatDateTime(items('For_each_employment')?['EmploymentStartDate'], 'yyyy-MM-ddTHH:mm:ssZ')}",
                                      "EXECUTIONID": "@{items('For_each_employment')?['ExecutionIdEmpDetail']}",
                                      "LEGALENTITYID": "@{items('For_each_employment')?['LegalEntityId']}",
                                      "PARTITION": "@{items('For_each_employment')?['PartitionEmpDetail']}",
                                      "PERSONNELNUMBER": "@{items('For_each_employment')?['WorkerNumber']}",
                                      "VALIDFROM": "@{formatDateTime(items('For_each_employment')?['ValidFrom'], 'yyyy-MM-ddTHH:mm:ssZ')}",
                                      "VALIDTO": "@{formatDateTime(items('For_each_employment')?['ValidTo'], 'yyyy-MM-ddTHH:mm:ssZ')}"
                                    },
                                    "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('sqlServerName')))},@{encodeURIComponent(encodeURIComponent(parameters('sqlDatabaseName')))}/procedures/@{encodeURIComponent(encodeURIComponent('[dbo].[usp_flag_processed_HcmEmploymentDetailStaging]'))}"
                                  },
                                  "runAfter": {
                                    "Update_Employment_detail": [
                                      "Succeeded"
                                    ]
                                  }
                                }
                              },
                              "runAfter": {
                                "Get_worker_position_emp": [
                                  "Succeeded"
                                ]
                              }
                            }
                          },
                          "runAfter": {}
                        }
                      }
                    },
                    "Employment_term_Case": {
                      "case": "byod/talent/EmploymentTerms",
                      "actions": {
                        "Loop_emp_term": {
                          "type": "Foreach",
                          "foreach": "@triggerBody()['items']",
                          "actions": {
                            "Get_worker_position_emp_term": {
                              "type": "ApiConnection",
                              "inputs": {
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['oracle']['connectionId']"
                                  }
                                },
                                "method": "get",
                                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[TALENT].[TALENT_STAFF]'))}/items",
                                "queries": {
                                  "$filter": "POSITION_ID eq '@{items('Loop_emp_term')?['PositionId']}'",
                                  "$select": "EMAILADDRESS"
                                }
                              },
                              "runAfter": {}
                            },
                            "Check_worker_position_exist_empTerm": {
                              "type": "If",
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@length(body('Get_worker_position_emp_term')?['value'])",
                                      1
                                    ]
                                  }
                                ]
                              },
                              "actions": {
                                "Update_Employment_term": {
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['oracle']['connectionId']"
                                      }
                                    },
                                    "method": "patch",
                                    "body": {
                                      "TALENT_ID": "@{items('Loop_emp_term')?['WorkerNumber']}",
                                      "POSITION_ID": "@{items('Loop_emp_term')?['PositionId']}",
                                      "EMPLOYEESTATUS": "@{items('Loop_emp_term')?['AgreementTermId']}"
                                    },
                                    "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[TALENT].[TALENT_STAFF]'))}/items/@{encodeURIComponent(encodeURIComponent(items('Loop_emp_term')?['PositionId']))}"
                                  },
                                  "runAfter": {}
                                },
                                "Execute_Emp_term_stored_procedure": {
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "body": {
                                      "AGREEMENTTERMID": "@{items('Loop_emp_term')?['AgreementTermId']}",
                                      "EMPLOYMENTENDDATE": "@{formatDateTime(items('Loop_emp_term')?['EmploymentEndDate'], 'yyyy-MM-ddTHH:mm:ssZ')}",
                                      "EMPLOYMENTSTARTDATE": "@{formatDateTime(items('Loop_emp_term')?['EmploymentStartDate'], 'yyyy-MM-ddTHH:mm:ssZ')}",
                                      "EXECUTIONID": "@{items('Loop_emp_term')?['ExecutionEmpTerm']}",
                                      "LEGALENTITYID": "@{items('Loop_emp_term')?['LegalEntityId']}",
                                      "PARTITION": "@{items('Loop_emp_term')?['PartitionEmpTerm']}",
                                      "PERSONNELNUMBER": "@{items('Loop_emp_term')?['WorkerNumber']}",
                                      "VALIDFROM": "@{formatDateTime(items('Loop_emp_term')?['ValidFrom'], 'yyyy-MM-ddTHH:mm:ssZ')}",
                                      "VALIDTO": "@{formatDateTime(items('Loop_emp_term')?['ValidTo'], 'yyyy-MM-ddTHH:mm:ssZ')}"
                                    },
                                    "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('sqlServerName')))},@{encodeURIComponent(encodeURIComponent(parameters('sqlDatabaseName')))}/procedures/@{encodeURIComponent(encodeURIComponent('[dbo].[usp_flag_processed_HcmEmploymentTermStaging]'))}"
                                  },
                                  "runAfter": {
                                    "Update_Employment_term": [
                                      "Succeeded"
                                    ]
                                  }
                                }
                              },
                              "runAfter": {
                                "Get_worker_position_emp_term": [
                                  "Succeeded"
                                ]
                              }
                            }
                          },
                          "runAfter": {}
                        }
                      }
                    },
                    "Employee_detail_Case": {
                      "case": "byod/talent/EmployeeDetails",
                      "actions": {
                        "Loop_employee_detail": {
                          "type": "Foreach",
                          "foreach": "@triggerBody()['items']",
                          "actions": {
                            "Get_worker_employee_detail": {
                              "type": "ApiConnection",
                              "inputs": {
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['oracle']['connectionId']"
                                  }
                                },
                                "method": "get",
                                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[TALENT].[TALENT_STAFF]'))}/items",
                                "queries": {
                                  "$filter": "POSITION_ID eq '@{items('Loop_employee_detail')?['PositionId']}'",
                                  "$select": "EMAILADDRESS"
                                }
                              },
                              "runAfter": {}
                            },
                            "Check_worker_employee_detail": {
                              "type": "If",
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@length(body('Get_worker_employee_detail')?['value'])",
                                      1
                                    ]
                                  }
                                ]
                              },
                              "actions": {
                                "Update_Employee_detail": {
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['oracle']['connectionId']"
                                      }
                                    },
                                    "method": "patch",
                                    "body": {
                                      "TALENT_ID": "@{items('Loop_employee_detail')?['WorkerNumber']}",
                                      "POSITION_ID": "@{items('Loop_employee_detail')?['PositionId']}",
                                      "PROBATION_END_DATE": "@{formatDateTime(items('Loop_employee_detail')?['ProbationPeriod'], 'yyyy-MM-dd')}"
                                    },
                                    "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[TALENT].[TALENT_STAFF]'))}/items/@{encodeURIComponent(encodeURIComponent(items('Loop_employee_detail')?['PositionId']))}"
                                  },
                                  "runAfter": {}
                                },
                                "Execute_Employee_detail_stored_procedure": {
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "body": {
                                      "EMPLOYMENTENDDATE": "@{formatDateTime(items('Loop_employee_detail')?['EmploymentEndDate'], 'yyyy-MM-ddTHH:mm:ssZ')}",
                                      "EMPLOYMENTSTARTDATE": "@{formatDateTime(items('Loop_employee_detail')?['EmploymentStartDate'], 'yyyy-MM-ddTHH:mm:ssZ')}",
                                      "EXECUTIONID": "@{items('Loop_employee_detail')?['ExecutionId']}",
                                      "LEGALENTITYID": "@{items('Loop_employee_detail')?['LegalEntityId']}",
                                      "PARTITION": "@{items('Loop_employee_detail')?['Partition']}",
                                      "PERSONNELNUMBER": "@{items('Loop_employee_detail')?['WorkerNumber']}",
                                      "VALIDFROM": "@{formatDateTime(items('Loop_employee_detail')?['ValidFrom'], 'yyyy-MM-ddTHH:mm:ssZ')}",
                                      "VALIDTO": "@{formatDateTime(items('Loop_employee_detail')?['ValidTo'], 'yyyy-MM-ddTHH:mm:ssZ')}"
                                    },
                                    "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('sqlServerName')))},@{encodeURIComponent(encodeURIComponent(parameters('sqlDatabaseName')))}/procedures/@{encodeURIComponent(encodeURIComponent('[dbo].[usp_flag_processed_HcmEmploymentEmployeeStaging]'))}"
                                  },
                                  "runAfter": {
                                    "Update_Employee_detail": [
                                      "Succeeded"
                                    ]
                                  }
                                }
                              },
                              "runAfter": {
                                "Get_worker_employee_detail": [
                                  "Succeeded"
                                ]
                              }
                            }
                          },
                          "runAfter": {}
                        }
                      }
                    }
                  },
                  "default": {
                    "actions": {}
                  },
                  "runAfter": {}
                }
              },
              "runAfter": {}
            },
            "Confirm_status_of_Oracle_scope": {
              "type": "If",
              "expression": {
                "and": [
                  {
                    "not": {
                      "equals": [
                        "@result('Oracle_BYOD_Scope')[0]['status']",
                        "Succeeded"
                      ]
                    }
                  }
                ]
              },
              "actions": {
                "Error_handling_email": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['office365_1']['connectionId']"
                      }
                    },
                    "method": "post",
                    "body": {
                      "To": "@{parameters('supportEmailAddress')}",
                      "Subject": "Error occurred on @{parameters('logicAppName')} workflow running in Azure",
                      "Body": "Hello Support\n\nAn error occurred during the processing of records received from MIS service bus queue. This error happened inside the loop through JSON payload.\nPlease investigate this issue in Azure. The workflow project is called @{parameters('logicAppName')}.\n\nOnce this problem has been resolved the record will be re-discovered and should be processed successfully.\n\nThank you\n"
                    },
                    "path": "/Mail"
                  },
                  "runAfter": {}
                },
                "Response": {
                  "type": "Response",
                  "kind": "http",
                  "inputs": {
                    "statusCode": 200
                  },
                  "runAfter": {
                    "Error_handling_email": [
                      "Succeeded"
                    ]
                  }
                }
              },
              "runAfter": {
                "Oracle_BYOD_Scope": [
                  "Succeeded",
                  "Failed",
                  "Skipped",
                  "TimedOut"
                ]
              },
              "else": {
                "actions": {
                  "Response_2": {
                    "type": "Response",
                    "kind": "http",
                    "inputs": {
                      "statusCode": 200
                    },
                    "runAfter": {}
                  }
                }
              }
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "logicAppName": {
              "type": "String",
              "defaultValue": "[parameters('logicAppName')]"
            },
            "sqlServerName": {
              "type": "String",
              "defaultValue": "[parameters('SqlServerName')]"
            },
            "sqlDatabaseName": {
              "type": "String",
              "defaultValue": "[parameters('SqlDatabaseName')]"
            },
            "supportEmailAddress": {
              "type": "String",
              "defaultValue": "[parameters('SupportEmailAddress')]"
            }
          },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "items": {
                    "type": "array"
                  },
                  "querySubject": {
                    "type": "string"
                  },
                  "required": [
                    "items",
                    "querySubject"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "oracle": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'oracle')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('oracle_1_Connection_Name'))]",
                "connectionName": "[parameters('oracle_1_Connection_Name')]"
              },
              "sql": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'sql')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('sql_1_Connection_Name'))]",
                "connectionName": "[parameters('sql_1_Connection_Name')]"
              },
              "office365_1": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'office365')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('office365_1_Connection_Name'))]",
                "connectionName": "[parameters('office365_1_Connection_Name')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('oracle_1_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('sql_1_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('office365_1_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2016-06-01",
      "name": "[parameters('oracle_1_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'oracle')]"
        },
        "displayName": "[parameters('oracle_1_Connection_DisplayName')]",
        "parameterValues": {
          "server": "[parameters('oracle_1_server')]",
          "authType": "[parameters('oracle_1_authType')]",
          "username": "[parameters('oracle_1_username')]",
          "password": "[parameters('oracle_1_password')]",
          "gateway": {
            "id": "[parameters('oracle_1_gateway_id')]"
          }
        }
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2016-06-01",
      "name": "[parameters('sql_1_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'sql')]"
        },
        "displayName": "[parameters('sql_1_Connection_DisplayName')]",
        "parameterValues": {
          "server": "[parameters('sql_1_server')]",
          "database": "[parameters('sql_1_database')]",
          "username": "[parameters('sql_1_username')]",
          "password": "[parameters('sql_1_password')]",
          "sqlConnectionString": "[parameters('sql_1_sqlConnectionString')]"
        }
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2016-06-01",
      "name": "[parameters('office365_1_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'office365')]"
        },
        "displayName": "[parameters('office365_1_Connection_DisplayName')]"
      }
    }
  ],
  "outputs": {}
}